@book{schneider1999,
	author = {Schneider, Steve},
	title = {Concurrent and Real Time Systems: The {CSP} Approach},
	year = {1999},
	isbn = {0471623733},
	publisher = {John Wiley \& Sons, Inc.},
	address = {USA},
	edition = {1st}}

@inproceedings{hughes:quickcheck2000,
	author = {Claessen, Koen and Hughes, John},
	title = {QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs},
	year = {2000},
	isbn = {1581132026},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/351240.351266},
	doi = {10.1145/351240.351266},
	abstract = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.},
	booktitle = {Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming},
	pages = {268â€“279},
	numpages = {12},
	series = {ICFP '00}
}

@article{hoare:csp,
	title={Communicating sequential processes},
	author={Hoare, Charles Antony Richard},
	journal={Communications of the ACM},
	volume={21},
	number={8},
	pages={666--677},
	year={1978},
	publisher={ACM New York, NY, USA}
}

@book {Lampropoulos:SF4,
	author = {Leonidas Lampropoulos and Benjamin C. Pierce},
	title = "QuickChick: Property-Based Testing in Coq",
	series = "Software Foundations",
	volume = "4",
	year = "2020",
	publisher = "Electronic textbook",
	note = {Version 1.1, \url{http://softwarefoundations.cis.upenn.edu} },
}

@InProceedings{Roggenbach:CSP-Prover,
	author="Isobe, Yoshinao
	and Roggenbach, Markus",
	editor="Halbwachs, Nicolas
	and Zuck, Lenore D.",
	title="A Generic Theorem Prover of CSP Refinement",
	booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
	year="2005",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="108--123",
	abstract="We describe a new tool called Csp-Prover which is an interactive theorem prover dedicated to refinement proofs within the process algebra Csp. It aims specifically at proofs for infinite state systems, which may also involve infinite non-determinism. Semantically, Csp-Prover supports both the theory of complete metric spaces as well as the theory of complete partial orders. Both these theories are implemented for infinite product spaces. Technically, Csp-Prover is based on the theorem prover Isabelle. It provides a deep encoding of Csp. The tool's architecture follows a generic approach which makes it easy to adapt it for various Csp models besides those studied here: the stable failures model {\$}{\backslash}mathcal{\{}F{\}}{\$}and the traces model {\$}{\backslash}mathcal{\{}T{\}}{\$}.",
	isbn="978-3-540-31980-1"
}

@InProceedings{Woodcock:Isabelle/UTP,
	author="Foster, Simon
	and Zeyda, Frank
	and Woodcock, Jim",
	editor="Naumann, David",
	title="Isabelle/UTP: A Mechanised Theory Engineering Framework",
	booktitle="Unifying Theories of Programming",
	year="2015",
	publisher="Springer International Publishing",
	address="Cham",
	pages="21--41",
	abstract="We introduce Isabelle/UTP, a novel mechanisation of Hoare and He's Unifying Theories of Programming (UTP) in Isabelle/HOL. UTP is a framework for the study, formalisation, and unification of formal semantics. Our contributions are, firstly, a deep semantic model of UTP's alphabetised predicates, supporting meta-logical reasoning that is parametric in the underlying notions of values and types. Secondly, integration of host-logic type checking that subsumes the need for typing proof obligations in the object-language. Thirdly, proof tactics that transfer results from well-supported mathematical structures in Isabelle to proofs about UTP theories. Additionally, our work provides novel insights towards reconciliation of shallow and deep language embeddings.",
	isbn="978-3-319-14806-9"
}

@book{Paulson:Isabelle,
	title={Isabelle: A generic theorem prover},
	author={Paulson, Lawrence C},
	volume={828},
	year={1994},
	publisher={Springer Science \& Business Media}
}